// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mux4to1,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.302000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=33,HLS_VERSION=2018_3}" *)

module mux4to1 (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sel_V,
        d0_V,
        d1_V,
        d2_V,
        d3_V,
        y_V,
        y_V_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] sel_V;
input  [0:0] d0_V;
input  [0:0] d1_V;
input  [0:0] d2_V;
input  [0:0] d3_V;
output  [0:0] y_V;
output   y_V_ap_vld;

reg[0:0] y_V;
reg y_V_ap_vld;

wire   [1:0] sel_V_read_read_fu_58_p2;

always @ (*) begin
    if (~(1'b1 == 1'b1)) begin
        y_V = 1'd0;
    end else if (((sel_V_read_read_fu_58_p2 == 2'd0) & (ap_start == 1'b1))) begin
        y_V = d0_V;
    end else if (((sel_V_read_read_fu_58_p2 == 2'd1) & (ap_start == 1'b1))) begin
        y_V = d1_V;
    end else if (((sel_V_read_read_fu_58_p2 == 2'd2) & (ap_start == 1'b1))) begin
        y_V = d2_V;
    end else if (((sel_V_read_read_fu_58_p2 == 2'd3) & (ap_start == 1'b1))) begin
        y_V = d3_V;
    end else begin
        y_V = 'bx;
    end
end

always @ (*) begin
    if ((((sel_V_read_read_fu_58_p2 == 2'd0) & (ap_start == 1'b1)) | ((sel_V_read_read_fu_58_p2 == 2'd1) & (ap_start == 1'b1)) | ((sel_V_read_read_fu_58_p2 == 2'd2) & (ap_start == 1'b1)) | ((sel_V_read_read_fu_58_p2 == 2'd3) & (ap_start == 1'b1)))) begin
        y_V_ap_vld = 1'b1;
    end else begin
        y_V_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign sel_V_read_read_fu_58_p2 = sel_V;

endmodule //mux4to1
