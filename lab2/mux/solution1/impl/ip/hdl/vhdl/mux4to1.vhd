-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mux4to1 is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sel_V : IN STD_LOGIC_VECTOR (1 downto 0);
    d0_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d1_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d2_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d3_V : IN STD_LOGIC_VECTOR (0 downto 0);
    y_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    y_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of mux4to1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mux4to1,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.302000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=33,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal sel_V_read_read_fu_58_p2 : STD_LOGIC_VECTOR (1 downto 0);


begin



    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    sel_V_read_read_fu_58_p2 <= sel_V;

    y_V_assign_proc : process(ap_start, d0_V, d1_V, d2_V, d3_V, sel_V_read_read_fu_58_p2)
    begin
        if (not((ap_const_boolean_1 = ap_const_boolean_1))) then 
            y_V <= ap_const_lv1_0;
        elsif (((sel_V_read_read_fu_58_p2 = ap_const_lv2_0) and (ap_start = ap_const_logic_1))) then 
            y_V <= d0_V;
        elsif (((sel_V_read_read_fu_58_p2 = ap_const_lv2_1) and (ap_start = ap_const_logic_1))) then 
            y_V <= d1_V;
        elsif (((sel_V_read_read_fu_58_p2 = ap_const_lv2_2) and (ap_start = ap_const_logic_1))) then 
            y_V <= d2_V;
        elsif (((sel_V_read_read_fu_58_p2 = ap_const_lv2_3) and (ap_start = ap_const_logic_1))) then 
            y_V <= d3_V;
        else 
            y_V <= "X";
        end if; 
    end process;


    y_V_ap_vld_assign_proc : process(ap_start, sel_V_read_read_fu_58_p2)
    begin
        if ((((sel_V_read_read_fu_58_p2 = ap_const_lv2_0) and (ap_start = ap_const_logic_1)) or ((sel_V_read_read_fu_58_p2 = ap_const_lv2_1) and (ap_start = ap_const_logic_1)) or ((sel_V_read_read_fu_58_p2 = ap_const_lv2_2) and (ap_start = ap_const_logic_1)) or ((sel_V_read_read_fu_58_p2 = ap_const_lv2_3) and (ap_start = ap_const_logic_1)))) then 
            y_V_ap_vld <= ap_const_logic_1;
        else 
            y_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
